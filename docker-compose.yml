version: '3'
services:
  api-gateway:
    build:
      context: ./
      dockerfile: ./apps/api-gateway/Dockerfile
      target: development
    container_name: api-gateway
    hostname: api-gateway
    ports:
      - '5000:5000'
    env_file:
      - ./.env
    depends_on:
      - rabbitmq
      - store
      - auth
      - orders
      - product-catalog
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev api-gateway

  auth:
    build:
      context: ./
      dockerfile: ./apps/auth/Dockerfile
      target: development
    container_name: auth
    hostname: auth
    ports:
      - '5001:5001'
    env_file:
      - ./.env
    depends_on:
      - rabbitmq
      - postgres-auth
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev auth

  store:
    build:
      context: ./
      dockerfile: ./apps/store/Dockerfile
      target: development
    container_name: store
    hostname: store
    ports:
      - '5002:5002'
    env_file:
      - ./.env
    depends_on:
      - rabbitmq
      - postgres-store
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev store

  orders:
    build:
      context: ./
      dockerfile: ./apps/orders/Dockerfile
      target: development
    container_name: orders
    hostname: orders
    env_file:
      - ./.env
    depends_on:
      - rabbitmq
      - postgres-orders
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev orders

  product-catalog:
    build:
      context: ./
      dockerfile: ./apps/product-catalog/Dockerfile
      target: development
    container_name: product-catalog
    hostname: product-catalog
    env_file:
      - ./.env
    depends_on:
      - rabbitmq
      - postgres-product-catalog
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev product-catalog

  postgres-auth:
    image: postgres
    container_name: postgres-auth
    hostname: postgres-auth
    restart: always
    environment:
      POSTGRES_USER: '${POSTGRES_USER_AUTH}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD_AUTH}'
      POSTGRES_DB: '${POSTGRES_AUTH_DB}'
    ports:
      - '5436:5432'
    volumes:
      - postgres-db-auth:/var/lib/postgresql/data

  postgres-store:
    image: postgres
    container_name: postgres-store
    hostname: postgres-store
    restart: always
    environment:
      POSTGRES_USER: '${POSTGRES_USER_STORE}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD_STORE}'
      POSTGRES_DB: '${POSTGRES_STORE_DB}'
    ports:
      - '5433:5432'
    volumes:
      - postgres-db-store:/var/lib/postgresql/data

  postgres-orders:
    image: postgres
    container_name: postgres-orders
    hostname: postgres-orders
    restart: always
    environment:
      POSTGRES_USER: '${POSTGRES_USER_ORDERS}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD_ORDERS}'
      POSTGRES_DB: '${POSTGRES_ORDERS_DB}'
    ports:
      - '5434:5432'
    volumes:
      - postgres-db-orders:/var/lib/postgresql/data

  postgres-product-catalog:
    image: postgres
    container_name: postgres-product-catalog
    hostname: postgres-product-catalog
    restart: always
    environment:
      POSTGRES_USER: '${POSTGRES_USER_PRODUCT_CATALOG}'
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD_PRODUCT_CATALOG}'
      POSTGRES_DB: '${POSTGRES_PRODUCT_CATALOG_DB}'
    ports:
      - '5435:5432'
    volumes:
      - postgres-db-product-catalog:/var/lib/postgresql/data

  postgres_admin:
    image: dpage/pgadmin4
    container_name: postgres_admin
    hostname: postgres_admin
    depends_on:
      - postgres-auth
      - postgres-store
      - postgres-orders
      - postgres-product-catalog
    env_file:
      - ./.env
    ports:
      - '15432:80'

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    hostname: rabbitmq
    volumes:
      - /var/lib/rabbitmq
    ports:
      - '5672:5672'
      - '15672:15672'
    env_file:
      - ./.env

volumes:
  postgres-db-auth:
  postgres-db-store:
  postgres-db-orders:
  postgres-db-product-catalog:
